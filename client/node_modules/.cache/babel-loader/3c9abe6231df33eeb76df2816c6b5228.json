{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Ground Control Flight- Final\\\\client\\\\src\\\\App\\\\Spacex\\\\MainConsole.jsx\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useMediaQuery } from \"react-responsive\";\nimport \"./main.css\";\nimport ControlConsoleForTablet from \"./ControlConsole/ControlConsoleForTablet\";\nimport ControlConsole from \"./ControlConsole/ControlConsole\";\nimport { CAPSULE_DATA_DISPLAY_MODE, LANPAD_DATA_DISPLAY_MODE, setCapsulesData, setDisplayMode, setLanpadData, setLoading } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\"; //Main console to call api an display the layout of the landing page\n\nconst MainConsole = () => {\n  const dispatch = useDispatch(); //captures the data on the capsule button click and picks the data from the database stored\n\n  const handleCapsulesClicked = async () => {\n    dispatch(setLoading(true));\n\n    try {\n      const response = await axios.get(\"http://localhost:4000/spacex\");\n      console.log(\"ðŸ‘‰ Returned data:\", response.data);\n      dispatch(setDisplayMode(CAPSULE_DATA_DISPLAY_MODE));\n      dispatch(setLoading(false));\n      dispatch(setCapsulesData(response.data));\n    } catch (e) {\n      dispatch(setDisplayMode(CAPSULE_DATA_DISPLAY_MODE));\n      dispatch(setLoading(false));\n      dispatch(setCapsulesData(e.message));\n      console.log(`ðŸ˜± Axios request failed: ${e}`);\n    }\n  }; //captures the data on the capsule button click and picks the data from the database stored\n\n\n  const handleLandingPadClicked = async landingPadId => {\n    if (landingPadId.trim().length > 0) {\n      dispatch(setLoading(true));\n\n      try {\n        const response = await axios.get(`http://localhost:4000/spacex/landing_pad?id=${landingPadId}`);\n        console.log(\"ðŸ‘‰ Returned data:\", response.data);\n        dispatch(setDisplayMode(LANPAD_DATA_DISPLAY_MODE));\n        dispatch(setLoading(false));\n        dispatch(setLanpadData({\n          id: response.data.id,\n          full_name: response.data.full_name,\n          status: response.data.status,\n          location: response.data.location\n        }));\n      } catch (e) {\n        dispatch(setDisplayMode(LANPAD_DATA_DISPLAY_MODE));\n        dispatch(setLoading(false));\n        dispatch(setLanpadData(e.message));\n        console.log(`ðŸ˜± Axios request failed: ${e}`);\n      }\n    }\n  };\n\n  const validateLandingPadId = val => {\n    return /[#.,/;$%&?]/gm.test(val);\n  };\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isDesktopOrLaptop ? \"wrapper\" : \"wrapper-for-tablet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, isDesktopOrLaptop ? /*#__PURE__*/React.createElement(ControlConsole, {\n    onCapsuleClick: () => handleCapsulesClicked(),\n    onLandingPadClick: id => handleLandingPadClicked(id),\n    validateLandingPadId: e => validateLandingPadId(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(ControlConsoleForTablet, {\n    onCapsuleClick: () => handleCapsulesClicked(),\n    onLandingPadClick: id => handleLandingPadClicked(id),\n    validateLandingPadId: e => validateLandingPadId(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }));\n};\n\n__signature__(MainConsole, \"useDispatch{dispatch}\\nuseMediaQuery{isDesktopOrLaptop}\", () => [useDispatch, useMediaQuery]);\n\nconst _default = MainConsole;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MainConsole, \"MainConsole\", \"C:\\\\Users\\\\User\\\\Documents\\\\Ground Control Flight- Final\\\\client\\\\src\\\\App\\\\Spacex\\\\MainConsole.jsx\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\User\\\\Documents\\\\Ground Control Flight- Final\\\\client\\\\src\\\\App\\\\Spacex\\\\MainConsole.jsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["C:/Users/User/Documents/Ground Control Flight- Final/client/src/App/Spacex/MainConsole.jsx"],"names":["React","axios","useMediaQuery","ControlConsoleForTablet","ControlConsole","CAPSULE_DATA_DISPLAY_MODE","LANPAD_DATA_DISPLAY_MODE","setCapsulesData","setDisplayMode","setLanpadData","setLoading","useDispatch","MainConsole","dispatch","handleCapsulesClicked","response","get","console","log","data","e","message","handleLandingPadClicked","landingPadId","trim","length","id","full_name","status","location","validateLandingPadId","val","test","isDesktopOrLaptop","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useMediaQuery } from \"react-responsive\";\nimport \"./main.css\";\nimport ControlConsoleForTablet from \"./ControlConsole/ControlConsoleForTablet\";\nimport ControlConsole from \"./ControlConsole/ControlConsole\";\nimport {\n  CAPSULE_DATA_DISPLAY_MODE,\n  LANPAD_DATA_DISPLAY_MODE,\n  setCapsulesData,\n  setDisplayMode,\n  setLanpadData,\n  setLoading,\n} from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n//Main console to call api an display the layout of the landing page\nconst MainConsole = () => {\n  const dispatch = useDispatch();\n  //captures the data on the capsule button click and picks the data from the database stored\n  const handleCapsulesClicked = async () => {\n    dispatch(setLoading(true));\n    try {\n      const response = await axios.get(\"http://localhost:4000/spacex\");\n      console.log(\"ðŸ‘‰ Returned data:\", response.data);\n      dispatch(setDisplayMode(CAPSULE_DATA_DISPLAY_MODE));\n      dispatch(setLoading(false));\n      dispatch(setCapsulesData(response.data));\n    } catch (e) {\n      dispatch(setDisplayMode(CAPSULE_DATA_DISPLAY_MODE));\n      dispatch(setLoading(false));\n      dispatch(setCapsulesData(e.message));\n      console.log(`ðŸ˜± Axios request failed: ${e}`);\n    }\n  };\n  //captures the data on the capsule button click and picks the data from the database stored\n  const handleLandingPadClicked = async (landingPadId) => {\n    if (landingPadId.trim().length > 0) {\n      dispatch(setLoading(true));\n      try {\n        const response = await axios.get(\n          `http://localhost:4000/spacex/landing_pad?id=${landingPadId}`\n        );\n        console.log(\"ðŸ‘‰ Returned data:\", response.data);\n        dispatch(setDisplayMode(LANPAD_DATA_DISPLAY_MODE));\n        dispatch(setLoading(false));\n        dispatch(\n          setLanpadData({\n            id: response.data.id,\n            full_name: response.data.full_name,\n            status: response.data.status,\n            location: response.data.location,\n          })\n        );\n      } catch (e) {\n        dispatch(setDisplayMode(LANPAD_DATA_DISPLAY_MODE));\n        dispatch(setLoading(false));\n        dispatch(setLanpadData(e.message));\n        console.log(`ðŸ˜± Axios request failed: ${e}`);\n      }\n    }\n  };\n\n  const validateLandingPadId = (val) => {\n    return /[#.,/;$%&?]/gm.test(val);\n  };\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n\n  return (\n    <div className={isDesktopOrLaptop ? \"wrapper\" : \"wrapper-for-tablet\"}>\n      {isDesktopOrLaptop ? (\n        <ControlConsole\n          onCapsuleClick={() => handleCapsulesClicked()}\n          onLandingPadClick={(id) => handleLandingPadClicked(id)}\n          validateLandingPadId={(e) => validateLandingPadId(e)}\n        />\n      ) : (\n        <ControlConsoleForTablet\n          onCapsuleClick={() => handleCapsulesClicked()}\n          onLandingPadClick={(id) => handleLandingPadClicked(id)}\n          validateLandingPadId={(e) => validateLandingPadId(e)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MainConsole;\n"]},"metadata":{},"sourceType":"module"}